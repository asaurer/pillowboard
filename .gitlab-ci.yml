---

stages:
  - compile
  - test
  - build
  - deploy

services:
  - docker:dind

cache:
  key: "$CI_PIPELINE_ID"
  paths: [.m2/]

variables:
  DOCKER_REGISTRY: "jerben"
  CONTAINER_IMAGE: ${DOCKER_REGISTRY}/dashboard

compile:
  stage: compile
  image: clojure:lein-2.7.0
  artifacts:
    expire_in: 5 days
    paths: [target/]
  script:
    - cd board
    - lein with-profile +ci deps
    - lein with-profile +ci uberjar

test:
  stage: test
  image: clojure:lein-2.7.0
  script:
    - cd board
    - lein with-profile +ci deps
    - lein with-profile +ci test :all
    - lein with-profile +ci eastwood
    - lein with-profile +ci cloverage | sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"

staging-build:
  stage: build
  only: [master]
  tags: [docker]
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker build --pull --no-cache -t ${CONTAINER_IMAGE}:latest board
    - docker push ${CONTAINER_IMAGE}:latest

production-build:
  stage: build
  only: [tags]
  tags: [docker]
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - docker build --pull --no-cache -t ${CONTAINER_IMAGE}:${CI_COMMIT_TAG} board
    - docker push ${CONTAINER_IMAGE}:${CI_COMMIT_TAG}

staging-deploy:
  stage: deploy
  only:
    - master
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh -NL localhost:2374:/var/run/docker.sock root@pillowboard.io &
    - docker -H localhost:2374 service update --force --with-registry-auth dashboard-staging

production-deploy:
  stage: deploy
  only: [tags]
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - apt-get update -y && apt-get install rsync -y
    - ssh docker@econdocker.uzh.ch "mkdir -p /usr/share/docker/ueli-api/ && rm -f /usr/share/docker/ueli-api/docker-compose.prod.yml"
    - rsync -avz docker-compose.prod.yml docker@econdocker.uzh.ch:/usr/share/docker/ueli-api/
    - ssh docker@econdocker.uzh.ch "cd /usr/share/docker/ueli-api/ && docker-compose -f docker-compose.prod.yml pull && docker-compose -f docker-compose.prod.yml down && docker-compose -f docker-compose.prod.yml up -d"
